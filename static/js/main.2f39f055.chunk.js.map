{"version":3,"sources":["redux/cases/cases.js","components/DataListing.js","components/SearchCountry.js","components/Home.js","components/Details.js","App.js","redux/store.js","reportWebVitals.js","index.js"],"names":["GET_CASES","GET_COUNTRY_DATA","SET_SEARCH_QUERY","CHANGE_DATE","TOGGLE_BACK_BUTTON","dateObj","Date","zeroPad","num","places","String","padStart","today","getFullYear","getMonth","getDate","convertDate","date","toggleBackButton","type","changeDate","payload","getCasesFunction","dispatch","fetch","then","data","json","initialState","dates","total","countryData","countries","name","source","today_confirmed","today_deaths","today_recovered","searchQuery","currentDate","backButton","ListComponent","useDispatch","useSelector","state","search","Object","keys","length","currentCountries","values","filter","country","toLowerCase","includes","filterCountries","map","countryObj","countryObject","to","id","onClick","className","Card","style","height","width","Body","Title","Subtitle","SearchBar","Form","onSubmit","e","preventDefault","Group","controlId","Control","value","onInput","query","target","placeholder","textAlign","border","loaded","HomeComponent","useEffect","display","flexDirection","Container","fluid","maxDate","onChange","toString","gridTemplateColumns","justifyItems","justifyContent","padding","backgroundColor","defaultProps","CountryDetails","countryId","useParams","getCountryDataAction","color","ListGroup","Item","NavigationBar","history","useNavigate","currentStyle","Navbar","variant","size","Brand","App","basename","process","exact","path","element","store","createStore","action","find","composeWithDevTools","applyMiddleware","thunk","logger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f39f055.chunk.js","sourcesContent":["export const GET_CASES = 'redux/actions/GET_CASES';\nconst GET_COUNTRY_DATA = 'redux/actions/GET_COUNTRY_DATA';\nexport const SET_SEARCH_QUERY = 'redux/actions/SET_SEARCH_QUERY';\nconst CHANGE_DATE = 'redux/actions/CHANGE_DATE';\nconst TOGGLE_BACK_BUTTON = 'redux/actions/TOGGLE_BACK_BUTTON';\nconst dateObj = new Date();\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\nexport const today = `${dateObj.getFullYear()}-${zeroPad(dateObj.getMonth() + 1, 2)}-${zeroPad(dateObj.getDate(), 2)}`;\nexport const convertDate = (date = today) => `${date.getFullYear()}-${zeroPad(date.getMonth() + 1, 2)}-${zeroPad(date.getDate(), 2)}`;\n\nexport const getCountryDataAction = (countryId) => ({ type: GET_COUNTRY_DATA, payload: countryId });\n\nexport const toggleBackButton = () => ({ type: TOGGLE_BACK_BUTTON });\n\nexport const changeDate = (date) => ({ type: CHANGE_DATE, payload: date });\n\nexport const getCasesFunction = (date = today) => (dispatch) => fetch(`https://api.covid19tracking.narrativa.com/api/${date}`)\n  .then((data) => data.json())\n  .then((data) => {\n    dispatch(changeDate(date));\n    return dispatch({ type: GET_CASES, payload: data });\n  });\n\nexport const setSearchQuery = (query) => ({ type: SET_SEARCH_QUERY, payload: query });\n\nconst initialState = {\n  dates: {},\n  total: {},\n  countryData: {\n    dates: {\n      [today]: {\n        countries: {\n          name: '',\n          source: '',\n          today_confirmed: 0,\n          today_deaths: 0,\n          today_recovered: 0,\n        },\n      },\n    },\n  },\n  searchQuery: '',\n  currentDate: new Date(),\n  backButton: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CASES:\n      return { ...state, ...action.payload };\n    case GET_COUNTRY_DATA:\n      return {\n        ...state,\n        countryData:\n        Object.values(Object.values(state.dates)[0].countries)\n          .find((country) => country.id === action.payload),\n      };\n    case SET_SEARCH_QUERY:\n      return { ...state, searchQuery: action.payload };\n    case CHANGE_DATE:\n      return { ...state, currentDate: new Date(`${action.payload} `) };\n    case TOGGLE_BACK_BUTTON:\n      return { ...state, backButton: !state.backButton };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleBackButton } from '../redux/cases/cases';\n\nconst filterCountries = (dates, search) => {\n  if (!Object.keys(dates).length || !dates) return [];\n  const currentCountries = Object.values(Object.values(Object.values(dates)[0])[0]);\n  if (!search || search === '') return currentCountries;\n  return currentCountries.filter((country) => country.name.toLowerCase()\n    .includes(search.toLowerCase()));\n};\n\nexport default function ListComponent() {\n  const dispatch = useDispatch();\n  const { dates, searchQuery } = useSelector((state) => state);\n  return (filterCountries(dates, searchQuery).map((countryObj) => {\n    const countryObject = countryObj;\n    return (\n      <Link to={`details/${countryObject.id}`} key={countryObject.id} onClick={() => dispatch(toggleBackButton())} className=\"dataList\" data-testid=\"data-item\">\n        <Card style={{ height: '124px', width: '187px' }}>\n          <Card.Body>\n            <Card.Title>{countryObject.name}</Card.Title>\n            <Card.Subtitle>\n              Confirmed Today:\n              {countryObject.today_confirmed}\n            </Card.Subtitle>\n          </Card.Body>\n        </Card>\n      </Link>\n    );\n  })\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { setSearchQuery } from '../redux/cases/cases';\n\nexport default function SearchBar() {\n  const { searchQuery } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <Form onSubmit={(e) => { e.preventDefault(); }}>\n      <Form.Group controlId=\"formSearchCountry\">\n        <Form.Control\n          value={searchQuery}\n          onInput={(e) => dispatch(setSearchQuery(e.target.value))}\n          type=\"text\"\n          placeholder=\"Search Country\"\n          name=\"searchCountry\"\n          style={{ textAlign: 'center', border: 'none' }}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-date-picker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ListComponent from './DataListing';\nimport SearchBar from './SearchCountry';\nimport { getCasesFunction, convertDate } from '../redux/cases/cases';\n\nlet loaded = false;\n\nexport default function HomeComponent() {\n  const dispatch = useDispatch();\n  const { currentDate, total } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (!loaded) {\n      dispatch(getCasesFunction());\n      loaded = true;\n    }\n  }, [dispatch]);\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Container className=\"generalData\">\n          <h5 data-testid=\"currentDate\">\n            Statistics for date:\n            {' '}\n            {convertDate(currentDate)}\n          </h5>\n          <h5 data-testid=\"confirmedCases\">\n            Total Confirmed Cases:\n            {' '}\n            {total.today_confirmed}\n          </h5>\n          <h5 data-testid=\"totalDeaths\">\n            Total Deaths:\n            {' '}\n            {total.today_deaths}\n          </h5>\n          <h5 data-testid=\"totalRecoveries\">\n            Total Recovered:\n            {' '}\n            {total.today_recovered}\n          </h5>\n        </Container>\n        <Container fluid className=\"filterSection\">\n          <h5 style={{ textAlign: 'center' }}>Filters</h5>\n          <SearchBar />\n        </Container>\n      </div>\n      <DatePicker maxDate={new Date()} value={currentDate} className=\"datePicker\" onChange={(e) => { dispatch(getCasesFunction(convertDate(new Date(e.toString())))); }} />\n      <Container\n        fluid\n        className=\"listContainer\"\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'auto auto',\n          justifyItems: 'center',\n          justifyContent: 'center',\n          padding: 0,\n          backgroundColor: 'var(--main-color)',\n        }}\n      >\n        <ListComponent />\n      </Container>\n    </div>\n  );\n}\n\nHomeComponent.propTypes = {\n  total: PropTypes.shape({\n    today_confirmed: PropTypes.number,\n    today_deaths: PropTypes.number,\n    today_recovered: PropTypes.number,\n  }),\n};\n\nHomeComponent.defaultProps = {\n  total: {},\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Container, ListGroup } from 'react-bootstrap';\nimport { getCountryDataAction } from '../redux/cases/cases';\n\nexport default function CountryDetails() {\n  const { countryId } = useParams();\n  const dispatch = useDispatch();\n  const countryObject = useSelector((state) => state.countryData);\n\n  useEffect(() => {\n    dispatch(getCountryDataAction(countryId));\n  }, [dispatch, countryId]);\n\n  return (\n    <Container key={countryId} style={{ padding: 0 }}>\n      <h1 style={{ backgroundColor: 'var(--main-color)', color: 'white' }}>{countryObject.name}</h1>\n      <ListGroup>\n        <ListGroup.Item data-testid=\"source\">\n          Source:\n          {countryObject.source}\n        </ListGroup.Item>\n        <ListGroup.Item data-testid=\"date\">\n          Date:\n          {countryObject.date}\n        </ListGroup.Item>\n        <ListGroup.Item data-testid=\"confirmed\">\n          Confirmed Today:\n          {countryObject.today_confirmed}\n        </ListGroup.Item>\n        <ListGroup.Item data-testid=\"deaths\">\n          Deaths Today:\n          {countryObject.today_deaths}\n        </ListGroup.Item>\n        <ListGroup.Item data-testid=\"recovered\">\n          Recovered Today:\n          {countryObject.today_recovered}\n        </ListGroup.Item>\n\n      </ListGroup>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { HiArrowSmLeft } from 'react-icons/hi';\nimport {\n  BrowserRouter as Router, Routes, Route, useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home from './components/Home';\nimport Details from './components/Details';\nimport { toggleBackButton } from './redux/cases/cases';\n\nconst NavigationBar = () => {\n  const { backButton } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const currentStyle = { display: 'none' };\n  if (backButton) {\n    currentStyle.display = 'block';\n  } else {\n    currentStyle.display = 'none';\n  }\n  return (\n    <Navbar className=\"navbar\" variant=\"dark\">\n      <HiArrowSmLeft style={currentStyle} className=\"navbar-brand\" size={40} onClick={() => { history(-1); dispatch(toggleBackButton(toggleBackButton())); }} />\n      <Navbar.Brand>\n        Covid-19 Tracker\n      </Navbar.Brand>\n    </Navbar>\n  );\n};\n\nconst App = () => (\n  <main>\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavigationBar />\n\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/details/:countryId\" element={<Details />} />\n\n      </Routes>\n    </Router>\n\n  </main>\n);\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './cases/cases';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk, logger)));\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}