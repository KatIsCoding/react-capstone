{"version":3,"sources":["redux/cases/cases.js","components/DataListing.js","components/SearchCountry.js","components/Home.js","components/Details.js","App.js","redux/store.js","reportWebVitals.js","index.js"],"names":["GET_CASES","GET_COUNTRY_DATA","SET_SEARCH_QUERY","CHANGE_DATE","TOGGLE_BACK_BUTTON","dateObj","Date","zeroPad","num","places","String","padStart","today","getFullYear","getMonth","getDate","convertDate","date","toggleBackButton","type","changeDate","payload","getCasesFunction","dispatch","fetch","then","data","json","initialState","dates","total","countryData","countries","name","source","today_confirmed","today_deaths","today_recovered","searchQuery","currentDate","backButton","ListComponent","useDispatch","useSelector","state","search","Object","keys","length","currentCountries","values","filter","country","toLowerCase","includes","filterCountries","map","countryObj","countryObject","to","id","onClick","className","Card","style","height","width","Body","Title","Subtitle","SearchBar","Form","onSubmit","e","preventDefault","Group","controlId","Control","value","onInput","query","target","placeholder","textAlign","border","HomeComponent","useEffect","display","flexDirection","Container","fluid","maxDate","onChange","gridTemplateColumns","justifyItems","justifyContent","padding","backgroundColor","defaultProps","CountryDetails","countryId","useParams","getCountryDataAction","color","ListGroup","Item","NavigationBar","history","useNavigate","currentStyle","Navbar","variant","size","Brand","App","basename","process","exact","path","element","store","createStore","action","find","composeWithDevTools","applyMiddleware","thunk","logger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46614106.chunk.js","sourcesContent":["\n\nexport const GET_CASES = 'redux/actions/GET_CASES';\nconst GET_COUNTRY_DATA = 'redux/actions/GET_COUNTRY_DATA'\nexport const SET_SEARCH_QUERY = 'redux/actions/SET_SEARCH_QUERY'\nconst CHANGE_DATE = 'redux/actions/CHANGE_DATE'\nconst TOGGLE_BACK_BUTTON = \"redux/actions/TOGGLE_BACK_BUTTON\"\nconst dateObj = new Date();\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\nexport const today = `${dateObj.getFullYear()}-${zeroPad(dateObj.getMonth() + 1, 2)}-${zeroPad(dateObj.getDate(), 2)}`;\nexport const convertDate = (date) => `${date.getFullYear()}-${zeroPad(date.getMonth() + 1, 2)}-${zeroPad(date.getDate(), 2)}`;\n\n\nexport const getCountryDataAction = (countryId) => ({type: GET_COUNTRY_DATA, payload: countryId})\n\nexport const toggleBackButton = () => ({type: TOGGLE_BACK_BUTTON})\n\n\nexport const changeDate = (date) => ({type: CHANGE_DATE, payload: date})\n\nexport const getCasesFunction = (date=today) => (dispatch) => fetch(`https://api.covid19tracking.narrativa.com/api/${date}`)\n                                                                      .then(data => data.json())\n                                                                          .then(data => {dispatch(changeDate(date)); return dispatch({ type: GET_CASES, payload: data })});\n\nexport const setSearchQuery = (query) => ({type: SET_SEARCH_QUERY, payload: query})                                                                        \n\nconst initialState = {dates: {}, total:{}, countryData: {dates: {\n  [today]: {\n    countries: {\n      name: \"\",\n      source: \"\",\n      today_confirmed: 0,\n      today_deaths: 0,\n      today_recovered: 0,\n    }}\n}}, searchQuery: \"\", currentDate: new Date(), backButton: false};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CASES:\n      return { ...state, ...action.payload};\n    case GET_COUNTRY_DATA:\n      return {...state, countryData: Object.values(Object.values(state.dates)[0].countries).find(country => country.id === action.payload)};\n    case SET_SEARCH_QUERY:\n      return {...state, searchQuery: action.payload}\n    case CHANGE_DATE:\n      return {...state, currentDate: new Date(`${action.payload  } `)}\n    case TOGGLE_BACK_BUTTON:\n      return {...state, backButton: !state.backButton}\n    default:\n      return state\n  }\n};\n\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\"\nimport { Link } from \"react-router-dom\";\nimport { useSelector , useDispatch } from \"react-redux\";\nimport { toggleBackButton } from \"../redux/cases/cases\";\n\nconst filterCountries = (dates, search) => {\n  if (!Object.keys(dates).length || !dates) return [];\n  const currentCountries = Object.values(Object.values(Object.values(dates)[0])[0]);\n  if (!search || search === \"\") return currentCountries;\n  return currentCountries.filter(country => country.name.toLowerCase().includes(search.toLowerCase()))\n}\n\n\nexport default function ListComponent() {\n  const dispatch = useDispatch();\n  const {dates, searchQuery} = useSelector(state => state);\n  return (filterCountries(dates, searchQuery).map(countryObj => {\n        const countryObject = countryObj\n        return (\n        <Link to={`details/${countryObject.id}`} key={countryObject.id} onClick={() => dispatch(toggleBackButton())} className=\"dataList\" data-testid=\"data-item\">\n        <Card style={{height: \"124px\", width: \"187px\"}}>\n          <Card.Body>\n            <Card.Title>{countryObject.name}</Card.Title>\n            <Card.Subtitle>Confirmed Today: {countryObject.today_confirmed}</Card.Subtitle>\n            </Card.Body>\n        </Card>\n        </Link>)\n      })\n    );\n    \n  \n\n}","import { useDispatch , useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { setSearchQuery } from \"../redux/cases/cases\";\n\nexport default function SearchBar(){\n  const { searchQuery } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return (\n  <Form onSubmit={(e) => {e.preventDefault()}}>\n    <Form.Group controlId=\"formSearchCountry\">\n        <Form.Control\n            value={searchQuery}\n            onInput={e => dispatch(setSearchQuery(e.target.value))}\n            type=\"text\"\n            placeholder=\"Search Country\"\n            name=\"searchCountry\"\n            style={{textAlign: \"center\", border: \"none\"}}\n        />\n    </Form.Group>\n    </Form>\n  )\n}","\nimport React, { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-date-picker\";\nimport { useDispatch , useSelector } from \"react-redux\";\nimport ListComponent from \"./DataListing\";\nimport SearchBar from \"./SearchCountry\";\nimport { getCasesFunction , convertDate } from \"../redux/cases/cases\";\n\n\nexport default function HomeComponent(){\n  const dispatch = useDispatch();\n  const { currentDate, total } = useSelector(state => state);\n  \n  \n  useEffect(() => {\n    dispatch(getCasesFunction());\n  }, [dispatch]);\n  return (\n    <div>\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n      <Container className=\"generalData\">\n        <h5 data-testid=\"currentDate\">Statistics for date: {convertDate(currentDate)}</h5>\n        <h5 data-testid=\"confirmedCases\">Total Confirmed Cases: {total.today_confirmed}</h5>\n        <h5 data-testid=\"totalDeaths\">Total Deaths: {total.today_deaths}</h5>\n        <h5 data-testid=\"totalRecoveries\">Total Recovered: {total.today_recovered}</h5>\n      </Container>\n      <Container fluid className=\"filterSection\">\n        <h5 style={{textAlign: \"center\"}}>Filters</h5>\n        <SearchBar />\n      </Container>\n      </ div>\n      <DatePicker maxDate={new Date()} value={currentDate} className=\"datePicker\" onChange={(e) => {dispatch(getCasesFunction(convertDate(e)))}} />\n      <Container fluid className=\"listContainer\" style={{display: \"grid\",\n                              gridTemplateColumns: \"auto auto\",\n                              justifyItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 0,\n                              backgroundColor: \"var(--main-color)\"}}>\n        <ListComponent />\n      </Container>\n    </div>\n  );\n}\n\n\n\nHomeComponent.propTypes = {\n  total: PropTypes.shape({\n    today_confirmed: PropTypes.number,\n    today_deaths: PropTypes.number,\n    today_recovered: PropTypes.number,\n  }),\n};\n\n\nHomeComponent.defaultProps = {\n  total: {},\n};\n\n","/* eslin-disable no-unused-vars */\n\nimport React, { useEffect } from 'react';\nimport { useSelector , useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Container, ListGroup } from 'react-bootstrap';\nimport { getCountryDataAction } from '../redux/cases/cases';\n// const currentID = \"\";\n\nexport default function CountryDetails() {\n\n  const { countryId } = useParams();\n  const dispatch = useDispatch();\n  const countryObject = useSelector((state) => state.countryData);\n  // let countryObject = {};\n\n  \n  useEffect(() => {\n    dispatch(getCountryDataAction(countryId))\n  }, [dispatch, countryId]) \n  \n    return (\n      <Container key={countryId} style={{padding: 0}}>\n      <h1 style={{backgroundColor: \"var(--main-color)\", color: \"white\"}}>{countryObject.name}</h1>\n      <ListGroup>\n        <ListGroup.Item>Source: {countryObject.source}</ListGroup.Item>\n        <ListGroup.Item>Date: {countryObject.date}</ListGroup.Item>\n        <ListGroup.Item>Confirmed Today: {countryObject.today_confirmed}</ListGroup.Item>\n        <ListGroup.Item>Deaths Today: {countryObject.today_deaths}</ListGroup.Item>\n        <ListGroup.Item>Recovered Today: {countryObject.today_recovered}</ListGroup.Item>\n      \n    </ListGroup>\n    </Container>);    \n\n\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"react-bootstrap/Navbar\"\nimport { HiArrowSmLeft } from \"react-icons/hi\"\nimport { BrowserRouter as Router, Routes, Route ,useNavigate} from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Home from \"./components/Home\"\nimport Details from \"./components/Details\"\nimport {  toggleBackButton } from \"./redux/cases/cases\";\n\nconst NavigationBar = () => {\n  const { backButton } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const currentStyle = {display: \"none\"};\n  if (backButton) {\n    currentStyle.display = \"block\";\n  } else {\n    currentStyle.display = \"none\";\n  }\n  return (\n    <Navbar className=\"navbar\" variant=\"dark\">\n        <HiArrowSmLeft style={currentStyle} className=\"navbar-brand\" size={40} onClick={() => {history(-1); dispatch(toggleBackButton(toggleBackButton()))}}/>\n        <Navbar.Brand>\n          Covid-19 Tracker\n        </Navbar.Brand>\n      </Navbar>\n    )\n  }\n  \n\n\nconst App = () => (\n  <main>\n    <Router basename={process.env.PUBLIC_URL}>\n    <NavigationBar />\n    \n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/details/:countryId\" element={<Details />}/>\n        \n      </Routes>\n    </Router>\n\n  </main>\n)\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './cases/cases';\n\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk, logger)));\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}